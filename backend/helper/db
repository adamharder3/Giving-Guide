#!/bin/bash

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Paths
SQL_DIR="database"
VAR_DIR="src/data"
DB_FILE="${VAR_DIR}/database.sqlite3"
UPLOADS_SRC="${SQL_DIR}/uploads"
UPLOADS_DST="${VAR_DIR}/uploads"

# Ensure sqlite3 exists
require_sqlite() {
  if ! command -v sqlite3 >/dev/null 2>&1; then
    echo "Error: sqlite3 is not installed or not on PATH" >&2
    exit 1
  fi
}

# Parse argument.  $1 is the first argument
case "$1" in
  "create")
    require_sqlite
    if [ -f "${DB_FILE}" ]; then
      echo "Error: database already exists"
      exit 1
    fi
    set -x
    mkdir -p "${UPLOADS_DST}"
    sqlite3 "${DB_FILE}" < "${SQL_DIR}/schema.sql"
    sqlite3 "${DB_FILE}" < "${SQL_DIR}/data.sql"
    cp "${UPLOADS_SRC}"/* "${UPLOADS_DST}/"
    set +x
    ;;

  "destroy")
    set -x
    rm -rf "${DB_FILE}" "${UPLOADS_DST}"
    set +x
    ;;

  "reset")
    require_sqlite
    set -x
    rm -rf "${DB_FILE}" "${UPLOADS_DST}"
    mkdir -p "${UPLOADS_DST}"
    sqlite3 "${DB_FILE}" < "${SQL_DIR}/schema.sql"
    sqlite3 "${DB_FILE}" < "${SQL_DIR}/data.sql"
    cp "${UPLOADS_SRC}"/* "${UPLOADS_DST}/"
    set +x
    ;;

  "dump")
    require_sqlite
    if [ ! -f "${DB_FILE}" ]; then
      echo "Error: database does not exist"
      exit 1
    fi
    set -x
    sqlite3 -batch -line "${DB_FILE}" 'SELECT * FROM charities'
    set +x
    ;;
esac